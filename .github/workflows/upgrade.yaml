name: upgrade
on:
  push:
    paths:
      - "manifest_staging/charts/**"

  pull_request:
    paths:
      - "manifest_staging/charts/**"

env:
  REGISTRY: ghcr.io

permissions: read-all

jobs:
  build-e2e-test-list:
    name: "Build E2E Test List"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - id: set-test-matrix
        run: |
          readarray -d '' test_dirs < <(find ./test/e2e/tests -mindepth 1 -type d -print0)
          json_array="$(printf "%s\n" "${test_dirs[@]}" | jq -R . | jq -cs)"
          echo "e2e-tests=${json_array}" > $GITHUB_OUTPUT
    outputs:
      e2e-tests: ${{ steps.set-test-matrix.outputs.e2e-tests }}

  build-eraser:
    name: "Build eraser image for e2e tests"
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit
      - name: Set up Go 1.19
        uses: actions/setup-go@v4
        with:
          go-version: 1.19
      - name: Setup buildx instance
        uses: docker/setup-buildx-action@v2
        with:
          use: true
      - uses: actions/cache@v3.3.1
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set env
        run: |
          echo ERASER_REPO=eraser >> $GITHUB_ENV
          echo ERASER_TAG=test >> $GITHUB_ENV
      - run: mkdir archive
      - name: Build eraser
        run: 'make docker-build-eraser OUTPUT_TYPE=type=oci,dest=./${ERASER_REPO}_${ERASER_TAG}.tar,name=${ERASER_REPO}:${ERASER_TAG}'
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docker-images
          path: eraser_test.tar

  build-trivy-scanner:
    name: "Build trivy-scanner image for e2e tests"
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Setup buildx instance
        uses: docker/setup-buildx-action@v2
        with:
          use: true
      - uses: actions/cache@v3.3.1
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set env
        run: |
          echo TRIVY_SCANNER_REPO=scanner >> $GITHUB_ENV
          echo TRIVY_SCANNER_TAG=test >> $GITHUB_ENV
      - name: Build trivy-scanner
        run: 'make docker-build-trivy-scanner OUTPUT_TYPE=type=oci,dest=./${TRIVY_SCANNER_REPO}_${TRIVY_SCANNER_TAG}.tar,name=${TRIVY_SCANNER_REPO}:${TRIVY_SCANNER_TAG}'
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docker-images
          path: scanner_test.tar

  build-manager:
    name: "Build manager image for e2e tests"
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Setup buildx instance
        uses: docker/setup-buildx-action@v2
        with:
          use: true
      - uses: actions/cache@v3.3.1
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set env
        run: |
          echo MANAGER_REPO=manager >> $GITHUB_ENV
          echo MANAGER_TAG=test >> $GITHUB_ENV
      - name: Build manager
        run: 'make docker-build-manager OUTPUT_TYPE=type=oci,dest=./${MANAGER_REPO}_${MANAGER_TAG}.tar,name=${MANAGER_REPO}:${MANAGER_TAG}'
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docker-images
          path: manager_test.tar

  build-collector:
    name: "Build collector image for e2e tests"
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Setup buildx instance
        uses: docker/setup-buildx-action@v2
        with:
          use: true
      - uses: actions/cache@v3.3.1
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set env
        run: |
          echo COLLECTOR_REPO=collector >> $GITHUB_ENV
          echo COLLECTOR_TAG=test >> $GITHUB_ENV
      - name: Build collector
        run: 'make docker-build-collector OUTPUT_TYPE=type=oci,dest=./${COLLECTOR_REPO}_${COLLECTOR_TAG}.tar,name=${COLLECTOR_REPO}:${COLLECTOR_TAG}'
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docker-images
          path: collector_test.tar

  helm-upgrade:
    name: "E2E Tests"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
    needs:
      - build-e2e-test-list
      - build-eraser
      - build-manager
      - build-collector
      - build-trivy-scanner
    strategy:
      fail-fast: false
      matrix:
        KUBERNETES_VERSION: ["1.24.7", "1.25.3", "1.26.0"]
        E2E_TEST: ${{ fromJson(needs.build-e2e-test-list.outputs.e2e-tests) }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Fetch Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: docker-images
          path: ${{ github.workspace }}/images
      - name: Set up Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/cache@v3.3.1
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Set env
        run: |
          echo ERASER_REPO=eraser >> $GITHUB_ENV
          echo MANAGER_REPO=manager >> $GITHUB_ENV
          echo COLLECTOR_REPO=collector >> $GITHUB_ENV
          echo TRIVY_SCANNER_REPO=scanner >> $GITHUB_ENV
          echo ERASER_TAG=test >> $GITHUB_ENV
          echo MANAGER_TAG=test >> $GITHUB_ENV
          echo COLLECTOR_TAG=test >> $GITHUB_ENV
          echo TRIVY_SCANNER_TAG=test >> $GITHUB_ENV
          echo ARCHIVE_DIR=${{ github.workspace }}/images >> $GITHUB_ENV
      - name: Run e2e test
        run: |
          make e2e-test \
            HELM_UPGRADE_TEST=1 \
            ERASER_IMG=$ARCHIVE_DIR/${ERASER_REPO}_${ERASER_TAG}.tar \
            MANAGER_IMG=$ARCHIVE_DIR/${MANAGER_REPO}_${MANAGER_TAG}.tar \
            COLLECTOR_IMG=$ARCHIVE_DIR/${COLLECTOR_REPO}_${COLLECTOR_TAG}.tar \
            SCANNER_IMG=$ARCHIVE_DIR/${TRIVY_SCANNER_REPO}_${TRIVY_SCANNER_TAG}.tar \
            KUBERNETES_VERSION=${{ matrix.KUBERNETES_VERSION }} \
            E2E_TESTS=${{ matrix.E2E_TEST }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test_logs
          path: ${{ github.workspace }}/test_logs/*
          retention-days: 1
