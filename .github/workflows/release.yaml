name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  REGISTRY: ghcr.io

jobs:
  build-publish-release:
    name: "release"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write
      packages: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Setup buildx instance
        uses: docker/setup-buildx-action@v2
        with:
          use: true

      - uses: actions/cache@v3.2.6
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@v2

      # need to convert repo name to lowercase for Docker
      - name: Get tag and repo
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "REPO_OWNER=$(echo $GITHUB_REPOSITORY_OWNER | awk '{print tolower($0)}')" >> $GITHUB_ENV

      - name: Log in to the GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build eraser-manager
        run: make docker-build-manager \
          CACHE_FROM=type=gha,scope=eraser-manager \
          CACHE_TO=type=gha,scope=eraser-manager,mode=max \
          PLATFORM="linux/amd64,linux/arm64,linux/arm/v7" \
          OUTPUT_TYPE=type=registry \
          GENERATE_ATTESTATIONS=true \
          MANAGER_IMG=${{ env.REGISTRY }}/${REPO_OWNER}/eraser-manager:${TAG}

      - name: Build eraser
        run: make docker-build-eraser \
          CACHE_FROM=type=gha,scope=eraser-node \
          CACHE_TO=type=gha,scope=eraser-node,mode=max \
          PLATFORM="linux/amd64,linux/arm64,linux/arm/v7" \
          OUTPUT_TYPE=type=registry \
          GENERATE_ATTESTATIONS=true \
          ERASER_IMG=${{ env.REGISTRY }}/${REPO_OWNER}/eraser:${TAG}

      - name: Build collector
        run: make docker-build-collector \
          CACHE_FROM=type=gha,scope=collector \
          CACHE_TO=type=gha,scope=collector,mode=max \
          PLATFORM="linux/amd64,linux/arm64,linux/arm/v7" \
          OUTPUT_TYPE=type=registry \
          GENERATE_ATTESTATIONS=true \
          COLLECTOR_IMG=${{ env.REGISTRY }}/${REPO_OWNER}/collector:${TAG}

      - name: Build Trivy scanner
        run: make docker-build-trivy-scanner \
          CACHE_FROM=type=gha,scope=trivy-scanner \
          CACHE_TO=type=gha,scope=trivy-scanner,mode=max \
          PLATFORM="linux/amd64,linux/arm64,linux/arm/v7" \
          OUTPUT_TYPE=type=registry \
          GENERATE_ATTESTATIONS=true \
          TRIVY_SCANNER_IMG=${{ env.REGISTRY }}/${REPO_OWNER}/eraser-trivy-scanner:${TAG}

      - name: Create GitHub release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false

      - name: Publish Helm chart
        uses: stefanprodan/helm-gh-pages@v1.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          charts_dir: charts
          target_dir: charts
          linting: off
