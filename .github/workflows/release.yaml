name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  REGISTRY: ghcr.io

permissions:
  contents: write
  packages: write

jobs:
  build-publish-release:
    name: "release"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142
        with:
          egress-policy: audit

      - name: Check out code into the Go module directory
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Setup buildx instance
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3.2.0
        with:
          use: true

      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@b3a9207c0e1ef41f4cf215303c976869d0c2c1c4 # v3.0.0

      - name: Get tag
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Log in to the GHCR
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build eraser-manager
        run: make docker-build-manager \
          CACHE_FROM=type=gha,scope=eraser-manager \
          CACHE_TO=type=gha,scope=eraser-manager,mode=max \
          PLATFORM="linux/amd64,linux/arm64" \
          OUTPUT_TYPE=type=registry \
          GENERATE_ATTESTATIONS=true \
          MANAGER_IMG=${{ env.REGISTRY }}/${GITHUB_REPOSITORY_OWNER}/eraser-manager:${TAG}

      - name: Build remover
        run: make docker-build-remover \
          CACHE_FROM=type=gha,scope=eraser-node \
          CACHE_TO=type=gha,scope=eraser-node,mode=max \
          PLATFORM="linux/amd64,linux/arm64" \
          OUTPUT_TYPE=type=registry \
          GENERATE_ATTESTATIONS=true \
          REMOVER_IMG=${{ env.REGISTRY }}/${GITHUB_REPOSITORY_OWNER}/remover:${TAG}

      - name: Build collector
        run: make docker-build-collector \
          CACHE_FROM=type=gha,scope=collector \
          CACHE_TO=type=gha,scope=collector,mode=max \
          PLATFORM="linux/amd64,linux/arm64" \
          OUTPUT_TYPE=type=registry \
          GENERATE_ATTESTATIONS=true \
          COLLECTOR_IMG=${{ env.REGISTRY }}/${GITHUB_REPOSITORY_OWNER}/collector:${TAG}

      - name: Build Trivy scanner
        run: make docker-build-trivy-scanner \
          CACHE_FROM=type=gha,scope=trivy-scanner \
          CACHE_TO=type=gha,scope=trivy-scanner,mode=max \
          PLATFORM="linux/amd64,linux/arm64" \
          OUTPUT_TYPE=type=registry \
          GENERATE_ATTESTATIONS=true \
          TRIVY_SCANNER_IMG=${{ env.REGISTRY }}/${GITHUB_REPOSITORY_OWNER}/eraser-trivy-scanner:${TAG}

      - name: Create GitHub release
        uses: marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0 # v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false

      - name: Publish Helm chart
        uses: stefanprodan/helm-gh-pages@0ad2bb377311d61ac04ad9eb6f252fb68e207260 # v1.7.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          charts_dir: charts
          target_dir: charts
          linting: off
