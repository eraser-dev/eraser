name: Image build definitions for e2e tests

on:
  workflow_call:
    inputs:
      bucket-id:
        required: true
        type: string

jobs:
  build-eraser:
    name: "Build eraser image for e2e tests"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit
      - name: Set up Go 1.20
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - name: Setup buildx instance
        uses: docker/setup-buildx-action@v2
        with:
          use: true
      - uses: actions/cache@v3.3.1
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - run: 'echo ${{ inputs.bucket-id }}'
      - name: Set env
        run: |
          echo ERASER_REPO=eraser >> $GITHUB_ENV
          echo ERASER_TAG=test >> $GITHUB_ENV
      - name: Build eraser
        run: 'make docker-build-eraser OUTPUT_TYPE=type=oci,dest=./${ERASER_REPO}_${ERASER_TAG}.tar,name=${ERASER_REPO}:${ERASER_TAG}'
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.bucket-id }}
          path: eraser_test.tar

  build-trivy-scanner:
    name: "Build trivy-scanner image for e2e tests"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit
      - name: Set up Go 1.20
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - name: Setup buildx instance
        uses: docker/setup-buildx-action@v2
        with:
          use: true
      - uses: actions/cache@v3.3.1
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set env
        run: |
          echo TRIVY_SCANNER_REPO=scanner >> $GITHUB_ENV
          echo TRIVY_SCANNER_TAG=test >> $GITHUB_ENV
      - name: Build trivy-scanner
        run: 'make docker-build-trivy-scanner OUTPUT_TYPE=type=oci,dest=./${TRIVY_SCANNER_REPO}_${TRIVY_SCANNER_TAG}.tar,name=${TRIVY_SCANNER_REPO}:${TRIVY_SCANNER_TAG}'
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.bucket-id }}
          path: scanner_test.tar

  build-manager:
    name: "Build manager image for e2e tests"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit
      - name: Set up Go 1.20
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - name: Setup buildx instance
        uses: docker/setup-buildx-action@v2
        with:
          use: true
      - uses: actions/cache@v3.3.1
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set env
        run: |
          echo MANAGER_REPO=manager >> $GITHUB_ENV
          echo MANAGER_TAG=test >> $GITHUB_ENV
      - name: Build manager
        run: 'make docker-build-manager OUTPUT_TYPE=type=oci,dest=./${MANAGER_REPO}_${MANAGER_TAG}.tar,name=${MANAGER_REPO}:${MANAGER_TAG}'
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.bucket-id }}
          path: manager_test.tar

  build-collector:
    name: "Build collector image for e2e tests"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776
        with:
          egress-policy: audit
      - name: Set up Go 1.20
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - name: Setup buildx instance
        uses: docker/setup-buildx-action@v2
        with:
          use: true
      - uses: actions/cache@v3.3.1
        with:
          key: ${{ runner.OS }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
      - uses: crazy-max/ghaction-github-runtime@v2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set env
        run: |
          echo COLLECTOR_REPO=collector >> $GITHUB_ENV
          echo COLLECTOR_TAG=test >> $GITHUB_ENV
      - name: Build collector
        run: 'make docker-build-collector OUTPUT_TYPE=type=oci,dest=./${COLLECTOR_REPO}_${COLLECTOR_TAG}.tar,name=${COLLECTOR_REPO}:${COLLECTOR_TAG}'
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.bucket-id }}
          path: collector_test.tar
