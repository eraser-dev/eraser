name: Scan Images for Vulnerabilities (Trivy)
on:
  schedule:
    - cron: "0 9 * * *" # Every day @ 09:00 UTC, run Trivy scans against main
  workflow_dispatch:
    inputs:
      scan_main:
        description: "Run Trivy scans against images built on `main`."
        type: boolean
        required: true
        default: true
      version:
        description: "Released Eraser version to run Trivy scans against. Leave blank for no-op."
        type: string
        required: false
        default: ""

permissions: read-all

env:
  REGISTRY: ghcr.io

jobs:
  setup_trivy:
    name: "Setup"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09
        with:
          egress-policy: audit
      - name: Download trivy
        run: |
          pushd $(mktemp -d)
          wget https://github.com/aquasecurity/trivy/releases/download/v${{ env.TRIVY_VERSION }}/trivy_${{ env.TRIVY_VERSION }}_Linux-64bit.tar.gz
          tar zxvf trivy_${{ env.TRIVY_VERSION }}_Linux-64bit.tar.gz
          echo "$(pwd)" >> $GITHUB_PATH
        env:
          TRIVY_VERSION: "0.28.0"
  scan_vulnerabilities_main:
    name: "Scan for vulnerabilities (main)"
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.scan_main == true)
    runs-on: ubuntu-latest
    needs: setup_trivy
    timeout-minutes: 15
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: Get repo
        run: |
          echo "REPO=$(echo $GITHUB_REPOSITORY | awk '{print tolower($0)}')" >> $GITHUB_ENV
      - name: Build eraser-manager
        run: make docker-build-manager MANAGER_REPO=${{ env.REGISTRY }}/${REPO}-manager MANAGER_TAG=test
      - name: Build remover
        run: make docker-build-remover REMOVER_REPO=${{ env.REGISTRY }}/remover REMOVER_TAG=test
      - name: Build collector
        run: make docker-build-collector COLLECTOR_REPO=${{ env.REGISTRY }}/collector COLLECTOR_TAG=test
      - name: Build trivy scanner
        run: make docker-build-trivy-scanner TRIVY_SCANNER_REPO=${{ env.REGISTRY }}/${REPO}-trivy-scanner TRIVY_SCANNER_TAG=test
      - name: Trivy scan remover
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}/remover:test
      - name: Trivy scan eraser-manager
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}/${REPO}-manager:test
      - name: Trivy scan collector
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}/collector:test
      - name: Trivy scan trivy-scanner
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}/${REPO}-trivy-scanner:test
  scan_vulnerabilities:
    name: "Scan for vulnerabilities on released version"
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
    runs-on: ubuntu-latest
    needs: setup_trivy
    env:
      PROJECT: eraser-dev
    timeout-minutes: 15
    steps:
      - name: Trivy scan remover
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}/${{ env.PROJECT }}/remover:${{ github.event.inputs.version }}
      - name: Trivy scan eraser-manager
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}/${{ env.PROJECT }}/eraser-manager:${{ github.event.inputs.version }}
      - name: Trivy scan collector
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}/${{ env.PROJECT }}/collector:${{ github.event.inputs.version }}
      - name: Trivy scan trivy-scanner
        run: trivy image --ignore-unfixed --exit-code=1 --vuln-type=os,library ${{ env.REGISTRY }}/${{ env.PROJECT }}/eraser-trivy-scanner:${{ github.event.inputs.version }}
