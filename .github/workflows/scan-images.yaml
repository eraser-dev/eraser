name: Scan Images for Vulnerabilities (Trivy)
on:
  schedule:
    - cron: "0 9 * * *" # Every day @ 09:00 UTC, run Trivy scans against main
  workflow_dispatch:
    inputs:
      version:
        description: "Version of Eraser to run Trivy scans against. Leave empty to scan images built from the branch the action is running against."
        type: string
        required: false
        default: ""

permissions: read-all

env:
  REGISTRY: ghcr.io

jobs:
  scan_vulnerabilities:
    name: Scan for vulnerabilities ${{ github.event_name == 'schedule' && '(scheduled)' || '' }}
    runs-on: ubuntu-latest
    env:
      # Scanning RELEASED versions require the project `eraser-dev` as part of the repo name.
      REGISTRY_POSTFIX: ${{ github.event.inputs.version == '' && 'eraser-test' || 'eraser-dev' }}
      TAG: ${{ github.event.inputs.version == '' && 'test' || github.event.inputs.version }}
    timeout-minutes: 15
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@8ca2b8b2ece13480cda6dacd3511b49857a23c09
        with:
          egress-policy: audit

      - name: Check out code into the Go module directory
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Build Containers
        # We only build containers for runs wanting to scan against the running branch.
        if: github.event.inputs.version == ''
        run: |
          echo "Build eraser-manager"
          make docker-build-manager MANAGER_REPO=${{ env.REGISTRY }}/${{ env.REGISTRY_POSTFIX }}/eraser-manager MANAGER_TAG=${{ env.TAG }}
          echo "Build remover"
          make docker-build-remover REMOVER_REPO=${{ env.REGISTRY }}/${{ env.REGISTRY_POSTFIX }}/remover REMOVER_TAG=${{ env.TAG }}
          echo "Build collector"
          make docker-build-collector COLLECTOR_REPO=${{ env.REGISTRY }}/${{ env.REGISTRY_POSTFIX }}/collector COLLECTOR_TAG=${{ env.TAG }}
          echo "Build trivy-scanner"
          make docker-build-trivy-scanner TRIVY_SCANNER_REPO=${{ env.REGISTRY }}/${{ env.REGISTRY_POSTFIX }}/eraser-trivy-scanner TRIVY_SCANNER_TAG=${{ env.TAG }}

      - name: Scan remover for vulnerabilities
        uses: aquasecurity/trivy-action@0.12.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.REGISTRY_POSTFIX }}/remover:${{ env.TAG }}
          vuln-type: 'os,library'
          format: 'table'
          ignore-unfixed: true
          exit-code: 1
      - name: Scan eraser-manager for vulnerabilities
        uses: aquasecurity/trivy-action@0.12.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.REGISTRY_POSTFIX }}/eraser-manager:${{ env.TAG }}
          vuln-type: 'os,library'
          format: 'table'
          ignore-unfixed: true
          exit-code: 1
      - name: Scan collector for vulnerabilities
        uses: aquasecurity/trivy-action@0.12.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.REGISTRY_POSTFIX }}/collector:${{ env.TAG }}
          vuln-type: 'os,library'
          format: 'table'
          ignore-unfixed: true
          exit-code: 1
      - name: Scan trivy-scanner for vulnerabilities
        uses: aquasecurity/trivy-action@0.12.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.REGISTRY_POSTFIX }}/eraser-trivy-scanner:${{ env.TAG }}
          vuln-type: 'os,library'
          format: 'table'
          ignore-unfixed: true
          exit-code: 1
