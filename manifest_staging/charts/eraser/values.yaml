controllerManager:
  config:
    manager:
      runtime: containerd
      otlpEndpoint: ""
      logLevel: info
      scheduling:
        repeatInterval: 24h # to be parsed into time.Duration
        beginImmediately: true
      profile:
        enable: false
        port: 6060
      imageJob:
        successRatio: 1.0 # float; ok with YAML?
        cleanup:
          delayOnSuccess: 0s # to be parsed into time.Duration
          delayOnFailure: 1d
      pullSecrets: [] # image pull secrets for collector/scanner/eraser
      nodeFilter:
        type: exclude # must be either exclude|include
        selectors:
          - eraser.sh/cleanup.filter
    components:
      collector:
        enable: false
        image:
          repo: ghcr.io/azure/eraser/collector
          tag: latest
        request:
          cpu: 1000m
          mem: 500Mi
        limit:
          cpu: 1500m
          mem: 2Gi
      scanner:
        enable: false
        image:
          repo: ghcr.io/azure/eraser/trivy-scanner # supply custom image for custom scanner
          tag: latest
        request:
          cpu: 1000m
          mem: 500Mi
        limit:
          cpu: 1500m
          mem: 2Gi
        # The config needs to be passed through to the scanner as yaml, as a
        # single string. Because we allow custom scanner images, the scanner is
        # responsible for defining a schema, parsing, and validating.
        config: |
          # this is the schema for the default 'trivy-scanner' we should document
          # this because most users will probably be using the default scanner.
          cacheDir: /var/lib/trivy
          dbRepo: ghcr.io/aquasecurity/trivy-db
          deleteFailedImages: true
          vulnerabilities:
            ignoreUnfixed: true
            types:
              - os
              - library
          securityChecks: # need to be documented; determined by trivy, not us
            - vuln
          severities:
            - CRITICAL
      eraser:
        image:
          repo: ghcr.io/azure/eraser/eraser
          tag: latest
        request:
          cpu: 1000m
          mem: 500Mi
        limit:
          cpu: 1500m
          mem: 2Gi

  image:
    repository: ghcr.io/azure/eraser-manager
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  additionalArgs: []

  securityContext:
    allowPrivilegeEscalation: false

  resources:
    limits:
      memory: 30Mi
    requests:
      cpu: 100m
      memory: 20Mi

  nodeSelector:
    kubernetes.io/os: linux

  tolerations: []

  affinity: {}

eraser:
  image:
    repository: ghcr.io/azure/eraser
    tag: ""
    args: []

collector:
  image:
    repository: ghcr.io/azure/collector
    tag: ""
    args: []

scanner:
  image:
    repository: ghcr.io/azure/eraser-trivy-scanner
    tag: ""
    args: []

nameOverride: ""
imagePullSecrets: []
